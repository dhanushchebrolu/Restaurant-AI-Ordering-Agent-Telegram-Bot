{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}\n",
        "options": {
          "systemMessage": "You are aYou are a smart food ordering assistant for \"MDA Restaurant\".  \n\nRules:  \n\n1. When a user sends their first message (like hi, hello), reply with:  \n\"Welcome to MDA Restaurant üçΩÔ∏è  \nHow can I help you today?  \n- üõí Place an order  \n- ‚ÑπÔ∏è FAQ / Information  \n- üì¶ Check order / stock\"  \n\n(üëâ Keep the tone friendly like a food delivery app, not like a product e-commerce site)  \n\n2. If user wants *order*:  \n- Ask step by step: name, food item, quantity  \n- Check Inventory sheet before confirming  \n   - If available ‚Üí \"Your order for *[item]* (x quantity) is confirmed ‚úÖ\"  \n   - If not available ‚Üí \"Sorry, *[item]* is out of stock ‚ùå. Available options: [list items]\"  \n- Only confirmed orders go into the Orders sheet  \n- In Orders sheet always include:  \n   Status = Confirmed / Rejected  \n   Description = \"Order accepted (item available)\" OR \"Order rejected (out of stock)\"  \n\n3. If user wants *FAQ*:  \n- Answer short and clear (delivery time, payment method, restaurant hours)  \n\n4. If user wants *check order* or *check stock*:  \n- Ask for food name or order id  \n- Look up in Google Sheets (Orders / Inventory)  \n   - If checking order ‚Üí reply with status (Confirmed / Rejected / Cancelled / Delivered)  \n   - If checking stock ‚Üí reply with available quantity of that food  \n   - Also list all *available* food items with quantity if requested  \n\n5. If user wants *cancel order*:  \n- Reply politely:  \n  \"Sorry üôè I cannot cancel orders directly.  \n   Please call the restaurant owner first and inform them.  \n   Owner Contact: +95 1224567890\"  \n\n6. Always reply in short text like a normal WhatsApp chat  \n- Do not use **bold** or long paragraphs  \n- Use *stars* only for highlighting words  \n- Keep tone friendly, polite, and food-delivery app style  \nhelpful assistant\n\n also ask for address and fill it in the sheets address row\n\n\nalso if anyone want to check the status of the order or track the order, ask their name, search their name in the sheets and tell them the status\n\nwhen every people order food, ask for their mobile number and that must start with 9,8,7,6( if some one give invaild number, ask them to provide valid number or an indian number) and it must be indian number and it must containe 10 numbers, or else reject and when every people order for pizzas, ask for size they wanna order, small is 6 incles, medium is 12 inches and large is 16 inches, also fill the mobile number and also fill the pizza size in the sheet, if user give multiple dishes for order please fill them in the sheet by placing a \",\" in between then.\nfill the mobil"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -112,
        -176
      ],
      "id": "cd6abd1f-0879-46f6-8b49-60d4244a3c49",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -256,
        48
      ],
      "id": "e8551e80-7f0c-41cf-a6f9-50f69761f7b6",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "VrCZdR9uNEq7NcJr",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.chat.id }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -112,
        48
      ],
      "id": "60f73d07-cbff-4fe2-80e1-12c6c7fcf129",
      "name": "Simple Memory",
      "notes": "{{ $json.message.chat.id }}\n"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1028365832,
          "mode": "list",
          "cachedResultName": "Inventory",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs/edit#gid=1028365832"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        160,
        48
      ],
      "id": "171bff6c-1b99-456c-bc75-6cdce91eb690",
      "name": "Get inventry",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "NFlmlRT2JFP7qisp",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 74834417,
          "mode": "list",
          "cachedResultName": "FAQ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs/edit#gid=74834417"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        32,
        48
      ],
      "id": "08d0c210-a764-451f-9603-4b224dd8876c",
      "name": "FAQ",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "NFlmlRT2JFP7qisp",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1786310952,
          "mode": "list",
          "cachedResultName": "Orders",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RqRM7gVU4_wJ3oCtzb_7aiLRXsiqxkVeywbV428n3zs/edit#gid=1786310952"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Customer Name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Customer_Name', ``, 'string') }}",
            "Food Item": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Food_Item', ``, 'string') }}",
            "Quantity Ordered": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Quantity_Ordered', ``, 'string') }}",
            "Order Date": "={{ $now.format('yyyy-MM-dd hh-mm-ss a') }}\n",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}",
            "Address": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Address', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Customer Name",
              "displayName": "Customer Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Food Item",
              "displayName": "Food Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Quantity Ordered",
              "displayName": "Quantity Ordered",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Order Date",
              "displayName": "Order Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Address",
              "displayName": "Address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        304,
        48
      ],
      "id": "e6a5deb6-0268-4eaa-9791-434299bdfcbe",
      "name": "Post orders",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "NFlmlRT2JFP7qisp",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -496,
        -176
      ],
      "id": "f4f22ec7-8638-4581-a986-2a02d403cb70",
      "name": "Telegram Trigger",
      "webhookId": "9bfb2e74-3501-4bba-a8b0-d4cf0818c2c4",
      "credentials": {
        "telegramApi": {
          "id": "ElXgz7LpQfluDUGm",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "6720182428",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_notification": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        304,
        -176
      ],
      "id": "8665c9bb-6fd5-4564-b09f-ea1a705e0aaf",
      "name": "Send a text message",
      "webhookId": "7e4f71dd-9de5-495b-9f65-6bf9f303c697",
      "credentials": {
        "telegramApi": {
          "id": "ElXgz7LpQfluDUGm",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get inventry": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "FAQ": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Post orders": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "d668d1d6-aa54-424a-ad85-674600728f6c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c3e70c8be8442f5dc87ab509ff797eef0d0cc8e986bb029e57b1b50f1911ae07"
  },
  "id": "ejMzimZeuPpGLX34",
  "tags": []
}